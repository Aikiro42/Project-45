{
  "animationScripts": [
    "/items/active/weapons/ranged/abilities/project45gunfire/project45gunfireanimation.lua"
  ],
  
  "animation": "/items/active/weapons/ranged/abilities/project45gunfire/project45gunfire.animation",

  "ability" : {
    "name" : "Synthetik Mechanics",
    "type" : "project45gunfire",
    "scripts" : ["/items/active/weapons/ranged/abilities/project45gunfire/project45gunfire.lua"],
    "class" : "Project45GunFire",

    // Stat Config

    "baseDamage": 5,
    "reloadCost": 0.5, // percent of energy
    "reloadTime": 1,   // 80% actual reload time, 20% cocking time
    "critChance": 0.1,
    "critMult": 1.5,

    // Misc Config

    // Laser settings.
    "laser": {
      "enabled": false, // if true, laser is rendered
      "color": [255, 0, 0], // laser color
      // "range": 100, // max distance to which the laser is drawn
      "renderMaxRange": true // if false, laser is rendered up to player's aim position only
      ,"alwaysActive": false
    },

    "movementSpeedFactor": 1.25,
    "jumpHeightFactor": 1.25,
    "heavyWeapon": false,

    // Projectile Config
    
    "projectileKind": "hitscan", // projectile, hitscan, beam
    "projectileCount": 5,
    "burstCount": 3,
    "multishot": 1,
    "spread": 0.05, // affects direction the projectile flies to, from the muzzle
    
    "projectileType": "project45stdbullet",
    "projectileParameters": {
      "power": 100,
      "damageType": "IgnoresDef",
      "statusEffects": []
    },

    "hitscanParameters": {
      // hitscan params
      "hitscanRange": 100,  // range of the hitscan line in blocks
      "hitscanPunchThrough": 0,  // number of entities to register before stopping the scan
      "hitscanIgnoresTerrain": false,  // pierces through terrain if true
      "hitscanFadeTime": 0.1, // how long the hitscan line fades away
      "hitscanWidth": 1, // visual width of hitscan line in pixels
      // "hitscanColor": [255,255,200], // color of hitscan projectile; also dictates muzzle flash color
      // damage configuraiton of hitscan damage line
      // baseDamage is calculated by self:damagePerShot() * crit / activeItem.ownerPowerMultiplier()
      // but can be overridden; it's recommended that it shouldn't be overridden
      "hitscanDamageConfig": {
        "damageKind": "physical",
        "statusEffects": []
      },
      // actions to be executed at the end of the hitscan line
      "hitscanActionOnHit": []
    },

    "beamParameters": {
      "beamLength": 100,  // length of beam
      "beamWidth": 5, // width of beam - beams that are too wide can look weird
      "beamInnerWidth": 3, // width of inner white beam - just for vfx
      "beamJitter": 1, // how much the beam width changes as it's shot - just a vfx
      // "beamColor": [0,140,217], // color of beam
      // damage configuration of beam damage poly
      "beamDamageConfig": {
        "statusEffects" : [ ],
        "damageSourceKind" : "plasma",
        "knockback" : 2
      },
      // number of entities the beam passes through before it terminates
      // if the beam passes through less entities it keeps going until it hits terrain
      "beamPunchThrough": 3,
      
      // whether the beam fires through terrain or not
      "beamIgnoresTerrain": false
    },

    // Ammo Config
    
    "maxAmmo": 30,
    "ammoPerShot": 1,
    "quickReloadTimeframe": [0.5, 0.6, 0.7, 0.8], // [ good [ perfect ] good ]

    // Reload Config

    "ejectMagOnEmpty": false, // ejects mag when the gun hits 0 ammo
    "reloadOnEjectMag": false, // begins reload sequence upon ejecting
    "bulletsPerReload": -1, // bullets reloaded every active reload; set to negative number to reload all bullets
    // TODO: consider case wherein mag is present when reloading

    // Accuracy and Recoil Config

    "inaccuracy": 0.05, // affects arm movement as the trigger is pulled
    "recoilAmount": 0.1 , // amount of recoil per shot, in degrees; arm and weapon will rotate by half of this
    "maxRecoilDeg": 15, // the most the arm and weapon will rotate, in degrees.
    "recoilMult": 2, // multiplies recoilAmount
    "recoverTime": 3, // time it takes to recover aim completely, in seconds
    "screenShakeAmount": 0.1, // amount of screenshake per shot
    // time it takes to reach the max cycle time, in seconds
    // only matters if screenShake is a 2-element array of floats
    "screenShakeMaxTime": 3,

    // Fire Config

    "semi": true, // fires once per left click
    "manualFeed": false, // needs two left clicks to fire
    "slamFire": false, // whether the gun shoots right after feeding
    "cycleTime": 0.01, // time it takes to cock the gun, cycle rounds, etc.
    // time it takes to reach the max cycle time in seconds
    // only matters if cycleTime is a 2-element array of floats
    "cycleTimeMaxTime": 3,
    "fireTime": 0.1, // time before another input can be registered
    "cockTime": 0.5, // time it takes to cock weapon

    // Charge Config

    "chargeTime": 0,
    "overchargeTime": 0, // allows gun to deal up to 100% more damage, multiplicative to other bonuses
    "dischargeTimeMult": 2, // how fast the gun discharges
    
    "progressiveCharge": true, // whether the charge animation loops or is dependent on charge progress
    "chargeFrames": 6, // only matters if progressiveCharge is true

    // makes the gun fire once the charge timer hits/passes chargeTime
    "fireBeforeOvercharge": true,
    
    // fires gun after charging, given that there's ammo
    // doesn't really matter if fireBeforeOvercharge is true
    "autoFireOnFullCharge": false,

    // resets charge after firing
    // I don't recommend setting this to true if fireBeforeOvercharge is.
    "resetChargeOnFire": false,

    // resets charge when ejecting magazine
    "resetChargeOnEject": false,

    // allows charging if the ammo count is zero
    "maintainChargeOnEmpty": true,

     // discharges if the weapon is obstructed by terrain
    "chargeWhenObstructed": false
    
  }
}