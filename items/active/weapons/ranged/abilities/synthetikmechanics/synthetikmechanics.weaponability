{
  "animationCustom" : {
    
  },

  "animation" : "/items/active/weapons/ranged/abilities/synthetikmechanics/synthetikmechanics.animation",
  "animationScripts" : [
		"/items/active/weapons/ranged/abilities/synthetikmechanics/synthetikmechanicsanimation.lua"
	],

  "ability" : {
    "name" : "Synthetik Mechanics",
    "type" : "synthetikmechanics",
    "scripts" : ["/items/active/weapons/ranged/abilities/synthetikmechanics/synthetikmechanics.lua"],
    "class" : "SynthetikMechanics",
    
    

    // ________________________[ DAMAGE SETTINGS ]__________________________________
    "baseDamage": 6.25, // base damage per shot
    "critChance": 0,
    "critDamageMult": 1,

    // ________________________[ AMMO-RELATED SETTINGS ]__________________________________
    "maxAmmo": 8, // maximum ammo of the weapon
    "bulletsPerReload": 8,  // number of bullets reloaded at a time
    "ammoPerShot": 1, // ammo consumed per shot
    "burstCount": 1, // number of shots per burst


    // ________________________[ PROJECTILE SETTINGS ]__________________________________
  
    // if explicitly "project45stdbullet", gun fires hitscan shots; otherwise, gun fires projectiles
    // this is to ensure compatibility with vanilla altfires
    // either way, the projectileType field functions as any other projectileType field does
    "projectileType": "project45stdbullet",
    
    "overrideHitscan": false, // if true, "project45stdbullet" spawns the actual projectile while "hitscan" spawns hitscans
    
    // number multiplied to projectile count without affecting the damage;
    // values 0 and below will make the gun unable to shoot anything
    "multishot": 1, 

    "projectileCount" : 1, // number of projectiles launched per shot
    
    "projectileParameters": {
      // hitscan params
      "range": 100,  // range of the hitscan line in blocks
      "punchThrough": 1,  // number of entities to register before stopping the scan
      "fadeTime": 0.1, // how long the hitscan line fades away
      "hitscanWidth": 1, // visual width of hitscan line in pixels
      "hitscanColor": [255,255,200] // color of hitscan projectile; also dictates muzzle flash color
    },

    // ________________________[ GUN MECHANIC SETTINGS ]__________________________________
    "magType": "default", // default, clip, strip; dictates reload visuals
    
    "keepCasings": false, // drops casings per shot if false; overrides magazine particles with casings on reload if true
    
    "semi": true, // firing, pulling and pushing the bolt aren't continuously done on keypress if true
    
    "manualFeed": false, // whether the player must manually eject the case before firing another shot
    
    "chargeTime": 0, // amount of time the weapon will wind up before firing, in seconds
    
    "autoFireAfterCharge": true, // whether the gun automatically fires after fully charging

    // dictates whether holding the button while it's feeding will make it automatically shoot
    // only has any purpose if manualFeed is true
    "slamFire": false,

    // Depending on which is greater, cycleTime or fireTime will dictate the fire rate of the weapon.
    "cycleTime": 0.1, // Time it takes to eject the bullet casing and feed the next cartridge.
    
    "fireTime" : 0.1, // Amount of time between weapon triggers
    
    "laser": {
      "enabled": true, // if true, laser is rendered
      "color": [255, 0, 0], // laser color
      "range": 100, // max distance to which the laser is drawn
      "maxRange": true, // if false, laser is rendered up to player's aim position only
      // always renders laser if true; otherwise it's rendered if the player is walking
      "alwaysActive": false, 

      "toggle": false, // if true, laser is toggled whenever activated
      "toggleTime": 0.2 // time it takes to toggle

    },

  
    // ________________________[ JAM SETTINGS ]__________________________________
    "jamChances": {
      "bad": 0.2, // chance for a weapon to jam if it missed a reload
      "ok": 0.05, // chance for a weapon to jam if it waited a reload
      "good": 0.01 // chance for a weapon to jam if it hit a reload
    },
    "unjamTime": 0.1, // time it takes to attempt to unjam the weapon
    "unjamAmount": 0.25, // percent of unjam progress


    // ________________________[ ACCURACY SETTINGS ]__________________________________
    "recoilMomentum": 0, // momentum added to character opposite direction of aim vector when firing
    "recoilDeg": [2, 1], // degrees of recoil every time the gun is shot (think spray control)
    "aimTime": [3, 1], // time it takes to aim; first index is when you're running, second is when shift is held
    "inaccuracy" : 0.01, // Generic RNG inaccuracy; causes spread
    

    // ________________________[ RELOAD SETTINGS ]__________________________________
    "reloadEnergyCostRate": 0.2, // percent of energy consumed per reload
    "reloadTime": 0.5, // time to reload <bulletsPerReload>, in second
    "goodReloadInterval": [0.4, 0.8], // (percentage) interval during which a good reload is possible
    "perfectReloadInterval": [0.6, 0.65], // (percentage) interval of the good reload interval during which a perfect reload is possible
    "cockTime": 0.6, // time it takes to cock the gun


    // ________________________[ DODGE SETTINGS ]__________________________________
    "dashParams": {
      "enabled": true,
      "triggerTime": 0.2,
      "time": 0.1,
      "speed": 75,
      "endXVelMult": 0.3,
      "cooldown": 1
    },


    // ________________________[ VISUAL SETTINGS ]__________________________________
    /*
    The magazine's sprite sheet should look like this:
    [loop frame 1][loop frame 2] ... [loop frame L][n ammo][n-1 ammo] ... [x+1 ammo][x ammo]

    Each frame should be referred to in the .frames file as such:
    [present.0][present.1] .. [present.<>L-1][]

    */
    "magLoopFrames": 0, // L
    "magAnimRange": [0, 0], // [n, x]

    "muzzleFlashTime": 0.05, // number of seconds the muzzle light is active when firing
    "muzzleSmokeTime": 5, // number of seconds the muzzle smoke is active
    "muzzleSmokeDelay": 0.2,
    
    // ________________________[ COMPATIBILITY SETTINGS ]__________________________________

    "fireType": "auto",


    "stances" : {

      // SUSTAINED STANCES - These stances are interpolated to
      
      // initial stance when re-equipping the weapon
      "idleneo" : {
        "armRotation" : -45,
        "weaponRotation" : 0,
        "twoHanded" : false,
        "allowRotate" : true,
        "allowFlip" : true
      },

      // stance while the gun is aimed
      "aim" : {
        "armRotation" : 0,
        "weaponRotation" : 0,
        "twoHanded" : true,
        "allowRotate" : true,
        "allowFlip" : true
      },

      // stance while the gun is jammed
      "jammed" : {
        "armRotation" : 0,
        "weaponRotation" : -15,
        "twoHanded" : true,
        "allowRotate" : true,
        "allowFlip" : true
      },

      // stance taken while ejecting the mag
      // this stance is also snapped to
      "ejectmag" : {
        "armRotation" : -45,
        "weaponRotation" : 0,
        "twoHanded" : false,
        "allowRotate" : false,
        "allowFlip" : false
      },

      // SNAP STANCES - These stances will be snapped to briefly
      // only arm and weapon rotations matter

      // stance snaps to this when unjamming
      "unjam" : {
        "armRotation" : -45,
        "weaponRotation" : 0,
        "twoHanded" : false,
        "allowRotate" : false,
        "allowFlip" : false
      },

      "manualFeed": {
        "armRotation" : 5,
        "weaponRotation" : 5,
        "twoHanded" : false,
        "allowRotate" : false,
        "allowFlip" : false
      },

      "loadRound": {
        "armRotation" : -45,
        "weaponRotation" : 45,
        "twoHanded" : false,
        "allowRotate" : false,
        "allowFlip" : false
      },

      // RELOAD STANCES

      // stance taken while reloading
      "reloading" : {
        "armRotation" : -45,
        "weaponRotation" : 0,
        "twoHanded" : false,
        "allowRotate" : false,
        "allowFlip" : false
      },

      // stance taken upon finishing reload
      "reloaded" : {
        "armRotation" : -45,
        "weaponRotation" : 0,
        "twoHanded" : false,
        "allowRotate" : false,
        "allowFlip" : false
      },

      // Legacy Stances for altfire compatibility
      "fire": {
        "armRotation": 0,
        "weaponRotation": 0,
        "twoHanded": false,
        "allowRotate": true,
        "allowFlip": true
      },

      "cooldown": {
        "armRotation": 0,
        "weaponRotation": 0,
        "twoHanded": false,
        "allowRotate": true,
        "allowFlip": true
      },

      "idle" : {
        "armRotation" : 0,
        "weaponRotation" : 0,
        "twoHanded" : false,

        "allowRotate" : true,
        "allowFlip" : true
      }


    }
  }
}
