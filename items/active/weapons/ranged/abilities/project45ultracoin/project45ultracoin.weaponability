// Implementation idea from Luminho and MikMik's "The Jackpot"
// https://steamcommunity.com/sharedfiles/filedetails/?id=3213669675

{

  "animationCustom": {
    "sounds":{
      "error": ["/sfx/interface/clickon_error.ogg"],
      "throwPing": ["/sfx/project45neosfx/ability/project45ultracoin/coinflip.ogg"]
    }
  },

  "ability" : {
      "name" : "Ultracoin",
      "type" : "project45ultracoin",
      "scripts" : ["/items/active/weapons/ranged/abilities/project45ultracoin/project45ultracoin.lua"],
      "class" : "Project45Ultracoin",

      "fireTime": 0.15,
      "throwForce": 3,
      "inaccuracy": {
        "throwForce": 0.5,
        "angle": 0.1
      },
      
      // Cast costs
      "pixelCost": 100,
      "energyCost": 5,
      "ammoPerToss": 1,

      "coinParameters": {
        "damageCalcParameters": {
          /*
          base damage per coin is clamped within this range;
          when first spawning, a coin's base damage is initialized with
          the lower value of this range.
          */
          "baseDamageRange": [1, 450],
          /*
          amount continuously incremented to base damage per second before ricoshot;
          e.g. if the coin has been in the air for 0.1s and its baseDamageDelta is 10,
          then 0.1 * 10 = 1 is added to the coin's base damage.
          */
          "baseDamageDelta": 45,
          /*
          final damage dealt to target is clamped within this range. This can help prevent potential issues with
          integer overflow. (Exponential growth is a powerful thing)
          */
          "finalDamageRange": [45, 69420],
          "finalDamageMultiplier": 0.5
        },

        // odds of each coin to fire directly at an enemy while chaining
        // values below 0 negate splitshots
        // values above 1 guarantee splitshots
        "splitShotChance": 0.1,

        // number of times a coin can bounce off the ground before despawning
        "maxBounces": 3,

        // {x, y} multipliers applied to the coin's speed every bounce
        "bounceVelocityDecay": [0.8, 0.8],

        // number of seconds each coin lives
        "timeToLive": 30,


        // VISUALS
        
        // rate at which a coin spins
        "angularVelocity": -3.14,
        
        // how often segments will be generated; larger values mean more jagged segments
        "tracerSegmentTickFrequency": 2,
        // how long segments persist; larger values means longer tracers
        "tracerSegmentTickLifetime": 30
      }
  }
}
  